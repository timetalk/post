{"version":3,"sources":["lookup/components.js","post/Compontents.js","post/Feed.js","reportWebVitals.js","index.js"],"names":["getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","loadPost","username","callback","nextUrl","url","undefined","replace","xhr","XMLHttpRequest","responseType","open","setRequestHeader","onload","status","response","detail","window","location","href","send","createPost","data","jsonData","csrftoken","createACtionBtn","jsondata","JSON","stringify","loadPostDetail","postId","loadFeed","indexOf","UserPicture","props","user","className","UserLink","Fragment","style","cursor","onClick","event","preventDefault","children","UserDisplay","includeFullName","first_name","last_name","TextAreaModel","type","PostList","useState","postsInits","setPostInits","posts","setPosts","setNextUrl","useEffect","final","newPosts","concat","next","results","console","log","map","post","index","Post","newPost","actionPost","setActionPost","path","pathname","idRegEx","match","groups","isDetail","id","handleDidActionLike","newActionPost","src","image","alt","title","content","timestamp","ActionPostBtn","didLike","action","display","likes","like","actionDisplay","PostCompontentDetail","setPost","didPost","setDidpost","FeedList","setDidPost","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","e","React","createElement","rootEl","getElementById","ReactDOM","render","canPost","imageInputRef","createRef","textInputRef","textAreaRef","setNewPosts","handleCreateCallback","tempNewPosts","unshift","alert","onSubmit","newVal","current","files","newContent","value","newTitle","formdata","FormData","append","ref","placeholder","rows","dataset","rootElFeed","required","postDetailEl","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.3b2a2dd6.chunk.js","sourcesContent":["function getCookie(name) {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        var cookies = document.cookie.split(';');\r\n        for (var i = 0; i < cookies.length; i++) {\r\n            var cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\n\r\nexport function loadPost(username, callback, nextUrl){\r\n    let url = 'http://127.0.0.1:8000/api/post/'\r\n\r\n    if (nextUrl !== null && nextUrl !== undefined){\r\n        url = nextUrl.replace('http://127.0.0.1:8000/api/post/', '')\r\n    }\r\n    \r\n\r\n    if(username){\r\n        url = `http://127.0.0.1:8000/api/post/?username=${username}`\r\n    }\r\n    const xhr = new XMLHttpRequest()\r\n\r\n    const method = \"GET\"\r\n   \r\n\r\n    xhr.responseType = \"json\"\r\n    xhr.open(method, url)\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n    \r\n\r\n    xhr.onload = function(){\r\n        if(xhr.status===403){\r\n            const detail = xhr.response.detail\r\n            if(detail === \"Authentication credentials were not provided.\"){\r\n                window.location.href = \"/accounts/login?showLoginRequired=true\"\r\n            }\r\n        }\r\n      callback(xhr.response, xhr.status)\r\n    }\r\n    xhr.send()\r\n  }\r\n\r\nexport function createPost(data, callback){\r\n\r\n    let jsonData\r\n\r\n    if(data){\r\n        jsonData = data\r\n    }\r\n    const xhr = new XMLHttpRequest()\r\n    const csrftoken = getCookie('csrftoken');\r\n    const method = \"POST\"\r\n    const url = 'http://127.0.0.1:8000/api/post/create/'\r\n    xhr.responseType = \"json\"\r\n    xhr.open(method, url)\r\n \r\n    if(csrftoken){\r\n        xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n        xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", 'XMLHttpRequest')\r\n        xhr.setRequestHeader(\"Http-Requested-With\", 'XMLHttpRequest')\r\n\r\n    }\r\n    \r\n    xhr.onload = function(){\r\n        if(xhr.status===403){\r\n            const detail = xhr.response.detail\r\n            if(detail === \"Authentication credentials were not provided.\"){\r\n                window.location.href = \"/accounts/login?showLoginRequired=true\"\r\n            }\r\n        }\r\n        callback(xhr.response, xhr.status)\r\n    }\r\n    xhr.send(jsonData)\r\n}\r\n\r\n\r\n\r\nexport function createACtionBtn(data, callback){\r\n    let jsondata \r\n    if(data){\r\n        jsondata = JSON.stringify(data)\r\n    }\r\n    const xhr = new XMLHttpRequest()\r\n    const csrftoken = getCookie('csrftoken');\r\n\r\n    const method = \"POST\"\r\n    const url = 'http://127.0.0.1:8000/api/post/action/'\r\n\r\n    xhr.responseType = \"json\"\r\n    xhr.open(method, url)\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n\r\n    if(csrftoken){\r\n        xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n        xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", 'XMLHttpRequest')\r\n        xhr.setRequestHeader(\"Http-Requested-With\", 'XMLHttpRequest')\r\n\r\n    }\r\n\r\n    xhr.onload = function(){\r\n        if(xhr.status===403){\r\n            const detail = xhr.response.detail\r\n            if(detail === \"Authentication credentials were not provided.\"){\r\n                window.location.href = \"/accounts/login?showLoginRequired=true\"\r\n            }\r\n        }\r\n      callback(xhr.response, xhr.status)\r\n    }\r\n    xhr.send(jsondata)\r\n}\r\n\r\nexport function loadPostDetail(postId, callback){\r\n\r\n    const xhr = new XMLHttpRequest()\r\n\r\n    const method = \"GET\"\r\n    const url = `http://127.0.0.1:8000/api/post/${postId}`\r\n\r\n    xhr.responseType = \"json\"\r\n    xhr.open(method, url)\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n    \r\n\r\n    xhr.onload = function(){\r\n        if(xhr.status===403){\r\n            const detail = xhr.response.detail\r\n            if(detail === \"Authentication credentials were not provided.\"){\r\n                window.location.href = \"/accounts/login?showLoginRequired=true\"\r\n            }\r\n        }\r\n      callback(xhr.response, xhr.status)\r\n    }\r\n    xhr.send()\r\n  }\r\n\r\n  \r\nexport function loadFeed(callback, nextUrl){\r\n    let url = 'http://127.0.0.1:8000/api/post/feed/'\r\n\r\n    // if (nextUrl !== null && nextUrl !== undefined){\r\n    //     url = nextUrl.replace('http://127.0.0.1:8000/api/post/feed/', '')\r\n    // }\r\n    \r\n    const xhr = new XMLHttpRequest()\r\n\r\n    const method = \"GET\"\r\n   \r\n\r\n    xhr.responseType = \"json\"\r\n    xhr.open(method, url)\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n    \r\n\r\n    xhr.onload = function(){\r\n        if(xhr.status===403){\r\n            const detail = xhr.response.detail\r\n            if(detail === \"Authentication credentials were not provided.\"){\r\n                if(window.location.href.indexOf === -1){\r\n                    window.location.href = \"/accounts/login?showLoginRequired=true\"\r\n                }\r\n                \r\n            }\r\n        }\r\n      callback(xhr.response, xhr.status)\r\n    }\r\n    xhr.send()\r\n  }\r\n\r\n\r\n  ","import React, { useEffect, useState} from \"react\"\r\nimport { loadPost, createPost, createACtionBtn, loadPostDetail } from \"../lookup\"\r\n\r\n\r\nfunction UserPicture(props){\r\n  const {user} = props\r\n  return(\r\n    <div className=\"m-3 mb-2\">\r\n      <UserLink username={user.username}><span className=\"rounded-circle bg-black text-white text-uppercase py-3 px-4\">\r\n        {user.username[0]}\r\n      </span></UserLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction UserLink(props){\r\n  const {username} = props\r\n\r\n  const handleLink =(event) =>{\r\n    event.preventDefault()\r\n    window.location.href = `/profile/${username}`\r\n  }\r\n\r\n  return(\r\n    <React.Fragment>\r\n      <span style={{cursor:\"pointer\"}} onClick={handleLink} className=\"fw-bold\">\r\n        {props.children}\r\n      </span> \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nfunction UserDisplay(props){\r\n  const {user, includeFullName} = props\r\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name}`:null\r\n\r\n  const handleLink =(event) =>{\r\n    event.preventDefault()\r\n    window.location.href = `profile/${user.username}`\r\n  }\r\n\r\n  return(\r\n    <UserLink username={user.username}>\r\n      <span onClick={handleLink} className=\"fw-bold\">{user.username}</span> \r\n    </UserLink>\r\n  )\r\n}\r\n\r\nexport function TextAreaModel(){\r\n  return(\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-6 col-sm-12 mx-auto\">\r\n          <div className=\"mr-auto\">\r\n             <button type=\"button\" className=\"btn btn-primary me-auto rounded-circle\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\r\n              +\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    \r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function PostCompontent(props){\r\n  const canPost = props.canPost === \"false\" ? false:true\r\n  console.log(canPost)\r\n\r\n  const imageInputRef = React.createRef()\r\n  const textInputRef = React.createRef()\r\n  const textAreaRef = React.createRef()\r\n  const [newPosts, setNewPosts] = useState([])\r\n\r\n\r\n  const handleCreateCallback = (response, status) =>{\r\n    let tempNewPosts = [...newPosts]\r\n    if(status===201){\r\n      tempNewPosts.unshift(response)\r\n      setNewPosts(tempNewPosts)\r\n    }else{\r\n      alert(\"An error occured please try again letter !\")\r\n    }\r\n  }\r\n\r\nconst handleSubmit = (event) =>{\r\n    event.preventDefault()\r\n    const newVal = imageInputRef.current.files[0]\r\n    const newContent = textAreaRef.current.value\r\n    const newTitle = textInputRef.current.value\r\n\r\n    let formdata = new FormData()\r\n    formdata.append('title', newTitle)\r\n    formdata.append('content', newContent)\r\n    formdata.append('image', newVal)\r\n\r\n    createPost(formdata, handleCreateCallback)\r\n\r\n\r\n    textAreaRef.current.value = \"\"\r\n    textInputRef.current.value = \"\"\r\n    imageInputRef.current.value = null\r\n\r\n  }\r\n \r\n\r\n  return(\r\n    <div>\r\n      {canPost && <TextAreaModel />}\r\n      <div className=\"modal fade\" id=\"exampleModal\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">Post</h5>\r\n                  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <form onSubmit={handleSubmit}>\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Title</label>\r\n                      <input type=\"text\" className=\"form-control\" ref={textInputRef}   placeholder=\"title\" />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Content </label>\r\n                      <textarea className=\"form-control\"  rows=\"3\" ref={textAreaRef} ></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                      <label  className=\"form-label\">Upload file</label>\r\n                      <input className=\"form-control\" type=\"file\" ref={imageInputRef} />\r\n                    </div>\r\n\r\n                    <div className=\"modal-footer\">\r\n                      <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                      <button type=\"submit\" className=\"btn btn-primary\">Post</button>\r\n                    </div>\r\n                </form>  \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        <PostList  newPosts={newPosts} {...props}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function PostList(props){\r\n  const {username} = props\r\n  const [postsInits, setPostInits] = useState([])\r\n  const [posts, setPosts] = useState([])\r\n  const [nextUrl, setNextUrl] = useState(null)\r\n\r\n  useEffect(()=>{\r\n    let final = [...props.newPosts].concat(postsInits)\r\n    if (final.length !== posts.length){\r\n      setPosts(final)\r\n    }\r\n  }, [posts, props.newPosts, postsInits])\r\n\r\n  useEffect(()=>{\r\n    const myCallback = (response, status) =>{\r\n      if(status === 200){\r\n        setNextUrl(response.next)\r\n        setPostInits(response.results)\r\n        console.log(nextUrl)\r\n      }\r\n    }\r\n    loadPost(username, myCallback)\r\n  }, [username])\r\n\r\n  const handleLoadbtn =(event)=>{\r\n    event.preventDefault()\r\n\r\n    const handleBackendLoad =(response, status)=>{\r\n      if(status === 200){\r\n        setNextUrl(response.next)\r\n        const newPost = [...posts].concat(response.results)\r\n        setPostInits(newPost)\r\n        setPosts(newPost)\r\n      }\r\n    }\r\n\r\n    loadPost(username, handleBackendLoad, nextUrl)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"mt-5 col-6 col-md-9 mx-auto\">\r\n      <React.Fragment>\r\n        {posts.map((post, index)=>{\r\n          return <Post post={post}  key={`${index}`}/>\r\n        })}\r\n        <div className=\"d-grid gap-2  mx-auto mt-2\">\r\n          {nextUrl !== null && <button className=\"btn btn-outline-primary btn-sm mb-3 mx-auto\" onClick={handleLoadbtn}>Load posts</button>}\r\n        </div>\r\n      </React.Fragment>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction Post(props){\r\n    const {post} = props\r\n    const [actionPost, setActionPost] = useState(props.post ? props.post : null)\r\n\r\n    const path = window.location.pathname\r\n    const idRegEx = /(?<postId>\\d+)/\r\n    const match = path.match(idRegEx)\r\n    const postId = match ? match.groups.postId : -1\r\n    \r\n\r\n    const isDetail = `${post.id}` === `${postId}` ? false:true\r\n\r\n    const handleDidActionLike = (newActionPost) =>{\r\n      setActionPost(newActionPost)\r\n    }\r\n\r\n    const handleLink =(event)=>{\r\n      event.preventDefault()\r\n      window.location.href = `/${post.id}`\r\n    }\r\n\r\n\r\n    return(\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          \r\n        </div>\r\n\r\n        <div className='row mb-5 mt-2'>\r\n        <div className=\"col-12 col-md-6 col-sm-12 mx-auto\">\r\n          <div className=\"card h-100\">\r\n          <div className=\"d-flex align-items-center bg-light bg-gradient\">\r\n\r\n            <div className=\"col-1 me-4\">\r\n              <UserPicture user={post.user} />\r\n            </div>\r\n\r\n            <div className=\"col-11\">\r\n              <div className=\"m-3 mb-2\">\r\n                <span>\r\n                  <UserDisplay includeFullName user={post.user} />\r\n                </span><br />\r\n                <small className=\"text-muted capitaized\">{post.user.location}</small>\r\n              </div>\r\n            </div>\r\n            \r\n          </div>\r\n            <img src={`http://127.0.0.1:8000/${post.image}/`} className=\"card-img-top\" alt=\"...\" />\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{post.title}</h5>\r\n              <p className=\"card-text\">{post.content}</p>\r\n              <div>\r\n               <small className=\"text-muted\">{post.timestamp}</small>\r\n              </div>\r\n              \r\n              <div className=\"btn btn-group\">\r\n                {actionPost && <React.Fragment>\r\n                  <ActionPostBtn post={actionPost} didLike={handleDidActionLike}  action={{type:\"like\", display: \"like\"}}/>\r\n                  <ActionPostBtn post={actionPost} didLike={handleDidActionLike}  action={{type:\"unlike\", display: \"unlike\"}}/>\r\n                </React.Fragment>}\r\n                  {isDetail === false ? null : <button className=\"btn btn-outline-primary btn-sm\" onClick={handleLink}>views the post</button>}\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n      </div> \r\n    )\r\n  }\r\n\r\n\r\n  function ActionPostBtn(props){\r\n    const {post, action, didLike} = props\r\n    const likes = post.like ? post.like : 0\r\n\r\n    const className = props.className ? props.className : \"btn btn-primary btn-sm\"\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n    const display = action.type === \"like\" ? `${likes} ${actionDisplay}` : actionDisplay\r\n\r\n    const handleClick = (event) =>{\r\n      event.preventDefault()\r\n\r\n      const handleBackEndCallback = (response, status) =>{\r\n        if((status === 200 || status === 201) && didLike){\r\n          didLike(response)\r\n        }\r\n      }\r\n      createACtionBtn({id:post.id, action:action.type}, handleBackEndCallback)\r\n    }\r\n    return(\r\n        <button className={className} onClick={handleClick}>{display}</button>      \r\n    )\r\n  }\r\n\r\nexport function PostCompontentDetail(props){\r\n  const postId = props.postId\r\n  const [post, setPost] = useState(null)\r\n  const [didPost, setDidpost] = useState(false)\r\n\r\n  const handleBackendPostDetail = (response, status) =>{\r\n    if(didPost===false){\r\n        if(status===200){\r\n          setPost(response)\r\n          setDidpost(true)\r\n        }\r\n    }\r\n  }\r\n\r\n  loadPostDetail(postId, handleBackendPostDetail)\r\n  return post !== null ? <Post post={post} /> : null\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n","import React, { useEffect, useState} from \"react\"\r\nimport { loadFeed, createPost, createACtionBtn, loadPostDetail } from \"../lookup\"\r\n\r\n\r\nfunction UserPicture(props){\r\n  const {user} = props\r\n  return(\r\n    <div className=\"m-2 mb-2\">\r\n      <UserLink username={user.username}><span className=\"rounded-circle bg-black text-white text-uppercase py-2 px-3\">\r\n        {user.username[0]}\r\n      </span></UserLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction UserLink(props){\r\n  const {username} = props\r\n\r\n  const handleLink =(event) =>{\r\n    event.preventDefault()\r\n    window.location.href = `/profile/${username}`\r\n  }\r\n\r\n  return(\r\n    <React.Fragment>\r\n      <span style={{cursor:\"pointer\"}} onClick={handleLink} className=\"fw-bold\">\r\n        {props.children}\r\n      </span> \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nfunction UserDisplay(props){\r\n  const {user, includeFullName} = props\r\n//   const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name}`:null\r\n\r\n  const handleLink =(event) =>{\r\n    event.preventDefault()\r\n    window.location.href = `profile/${user.username}`\r\n  }\r\n\r\n  return(\r\n    <UserLink username={user.username}>\r\n      <span onClick={handleLink} className=\"fw-bold\">{user.username}</span> \r\n    </UserLink>\r\n  )\r\n}\r\n\r\nexport function TextAreaModel(){\r\n  return(\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-6 col-sm-12 mx-auto\">\r\n          <div className=\"mr-auto\">\r\n             <button type=\"button\" className=\"btn btn-primary me-auto rounded-circle\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\r\n              +\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    \r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function FeedCompontent(props){\r\n  const canPost = props.canPost === \"false\" ? false:true\r\n\r\n  const imageInputRef = React.createRef()\r\n  const textInputRef = React.createRef()\r\n  const textAreaRef = React.createRef()\r\n  const [newPosts, setNewPosts] = useState([])\r\n\r\n\r\n  const handleCreateCallback = (response, status) =>{\r\n    let tempNewPosts = [...newPosts]\r\n    if(status===201){\r\n      tempNewPosts.unshift(response)\r\n      setNewPosts(tempNewPosts)\r\n    }else{\r\n      alert(\"An error occured please try again letter !\")\r\n    }\r\n  }\r\n\r\nconst handleSubmit = (event) =>{\r\n    event.preventDefault()\r\n    const newVal = imageInputRef.current.files[0]\r\n    const newContent = textAreaRef.current.value\r\n    const newTitle = textInputRef.current.value\r\n\r\n    let formdata = new FormData()\r\n    formdata.append('title', newTitle)\r\n    formdata.append('content', newContent)\r\n    formdata.append('image', newVal)\r\n\r\n    createPost(formdata, handleCreateCallback)\r\n\r\n\r\n    textAreaRef.current.value = \"\"\r\n    textInputRef.current.value = \"\"\r\n    imageInputRef.current.value = null\r\n\r\n  }\r\n \r\n\r\n  return(\r\n    <div>\r\n      {canPost && <TextAreaModel />}\r\n      <div className=\"modal fade\" id=\"exampleModal\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">Post</h5>\r\n                  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <form onSubmit={handleSubmit}>\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Title</label>\r\n                      <input type=\"text\" className=\"form-control\" ref={textInputRef}   placeholder=\"title\" />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Content </label>\r\n                      <textarea required={true} placeholder=\"Think Twice\" className=\"form-control\"  rows=\"3\" ref={textAreaRef} ></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                      <label  className=\"form-label\">Upload file</label>\r\n                      <input required={true} className=\"form-control\" type=\"file\" ref={imageInputRef} />\r\n                    </div>\r\n\r\n                    <div className=\"modal-footer\">\r\n                      <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                      <button type=\"submit\" className=\"btn btn-primary\">Post</button>\r\n                    </div>\r\n                </form>  \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        <FeedList  newPosts={newPosts} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function FeedList(props){\r\n  const [postsInits, setPostInits] = useState([])\r\n  const [posts, setPosts] = useState([])\r\n  const [didPost, setDidPost] = useState(false)\r\n  const [nextUrl, setNextUrl] = useState(null)\r\n\r\n  useEffect(()=>{\r\n    let final = [...props.newPosts].concat(postsInits)\r\n    if (final.length !== posts.length){\r\n      setPosts(final)\r\n    }\r\n  }, [posts, props.newPosts, postsInits])\r\n\r\n  useEffect(()=>{\r\n    if(didPost === false){\r\n       const myCallback = (response, status) =>{\r\n      if(status === 200){\r\n        setNextUrl(response.next)\r\n        setPostInits(response.results)\r\n        setDidPost(true)\r\n      }\r\n    }\r\n    loadFeed(myCallback, nextUrl)\r\n    \r\n    }\r\n    \r\n  }, [ props.newPosts, posts, postsInits, nextUrl])\r\n\r\n  const handleLoadbtn =(event)=>{\r\n    event.preventDefault()\r\n\r\n    if(nextUrl !== null){\r\n      const handleBackendLoad =(response, status)=>{\r\n      if(status === 200){\r\n        setNextUrl(response.next)\r\n        const newPost = [...posts].concat(response.results)\r\n        setPostInits(newPost)\r\n        setPosts(newPost)\r\n      }\r\n    }\r\n    loadFeed(handleBackendLoad, nextUrl)\r\n    }\r\n   \r\n    \r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"mt-5 col-6 col-md-9 mx-auto\">\r\n      <React.Fragment>\r\n        {posts.map((post, index)=>{\r\n          return <Post post={post}  key={`${index}`}/>\r\n        })}\r\n        <div className=\"d-grid gap-2  mx-auto mt-2\">\r\n          {nextUrl !== null && <button className=\"btn btn-outline-primary btn-sm mb-3 mx-auto\" onClick={handleLoadbtn}>Load posts</button>}\r\n        </div>\r\n      </React.Fragment>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction Post(props){\r\n    const {post} = props\r\n    const [actionPost, setActionPost] = useState(props.post ? props.post : null)\r\n\r\n    const path = window.location.pathname\r\n    const idRegEx = /(?<postId>\\d+)/\r\n    const match = path.match(idRegEx)\r\n    const postId = match ? match.groups.postId : -1\r\n    \r\n\r\n    const isDetail = `${post.id}` === `${postId}` ? false:true\r\n\r\n    const handleDidActionLike = (newActionPost) =>{\r\n      setActionPost(newActionPost)\r\n    }\r\n\r\n    const handleLink =(event)=>{\r\n      event.preventDefault()\r\n      window.location.href = `/${post.id}`\r\n    }\r\n\r\n\r\n    return(\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          \r\n        </div>\r\n\r\n        <div className='row mb-5 mt-2'>\r\n        <div className=\"col-12 col-md-6 col-sm-12 mx-auto\">\r\n          <div className=\"card h-100\">\r\n          <div className=\"d-flex align-items-center bg-light bg-gradient\">\r\n\r\n            <div className=\"col-1 me-2\">\r\n              <UserPicture user={post.user} />\r\n            </div>\r\n\r\n            <div className=\"col-11\">\r\n              <div className=\"m-3 mb-3\">\r\n                <span>\r\n                  <UserDisplay includeFullName user={post.user} />\r\n                </span><br />\r\n                <small className=\"text-muted capitaized\">{post.user.location}</small>\r\n              </div>\r\n            </div>\r\n            \r\n          </div>\r\n            <img src={`http://127.0.0.1:8000/${post.image}/`} className=\"card-img-top\" alt=\"...\" />\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{post.title}</h5>\r\n              <p className=\"card-text\">{post.content}</p>\r\n              <div>\r\n               <small className=\"text-muted\">{post.timestamp}</small>\r\n              </div>\r\n              \r\n              <div className=\"btn btn-group\">\r\n                {actionPost && <React.Fragment>\r\n                  <ActionPostBtn post={actionPost} didLike={handleDidActionLike}  action={{type:\"like\", display: \"like\"}}/>\r\n                  <ActionPostBtn post={actionPost} didLike={handleDidActionLike}  action={{type:\"unlike\", display: \"unlike\"}}/>\r\n                </React.Fragment>}\r\n                  {isDetail === false ? null : <button className=\"btn btn-outline-primary btn-sm\" onClick={handleLink}>views the post</button>}\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n      </div> \r\n    )\r\n  }\r\n\r\n\r\n  function ActionPostBtn(props){\r\n    const {post, action, didLike} = props\r\n    const likes = post.like ? post.like : 0\r\n\r\n    const className = props.className ? props.className : \"btn btn-primary btn-sm\"\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n    const display = action.type === \"like\" ? `${likes} ${actionDisplay}` : actionDisplay\r\n\r\n    const handleClick = (event) =>{\r\n      event.preventDefault()\r\n\r\n      const handleBackEndCallback = (response, status) =>{\r\n        if((status === 200 || status === 201) && didLike){\r\n          didLike(response)\r\n        }\r\n      }\r\n      createACtionBtn({id:post.id, action:action.type}, handleBackEndCallback)\r\n    }\r\n    return(\r\n        <button className={className} onClick={handleClick}>{display}</button>      \r\n    )\r\n  }\r\n\r\nexport function PostCompontentDetail(props){\r\n  const postId = props.postId\r\n  const [post, setPost] = useState(null)\r\n  const [didPost, setDidpost] = useState(false)\r\n\r\n  const handleBackendPostDetail = (response, status) =>{\r\n    if(didPost===false){\r\n        if(status===200){\r\n          setPost(response)\r\n          setDidpost(true)\r\n        }\r\n    }\r\n  }\r\n\r\n  loadPostDetail(postId, handleBackendPostDetail)\r\n  return post !== null ? <Post post={post} /> : null\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { PostCompontent, FeedCompontent } from './post';\nimport { PostCompontentDetail } from './post/Compontents';\nimport reportWebVitals from './reportWebVitals';\n\nconst e = React.createElement\nconst rootEl = document.getElementById('root')\nif(rootEl){\n  ReactDOM.render(e(PostCompontent, rootEl.dataset), rootEl);\n}\n\nconst rootElFeed = document.getElementById('root-feed')\nif(rootElFeed){\n  ReactDOM.render(e(FeedCompontent), rootElFeed);\n}\n\nconst postDetailEl = document.querySelectorAll(\".post-detail-el\")\npostDetailEl.forEach(container=>{\n  if(postDetailEl){\n    ReactDOM.render(e(PostCompontentDetail, container.dataset), container)\n  }\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}